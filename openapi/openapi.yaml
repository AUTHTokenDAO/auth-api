openapi: 3.0.3
info:
  title: AUTH Token API
  version: 1.0.0
  description: >-
    This API is documented in **OpenAPI format** and describes how to access AUTH Token data including both public
    data on the blockchain, as well as management API for authenticated vendors and apps.

    ## General

    **WARNING: This API is an early draft and in active development. We are changing things
    rapidly. Once we are ready to release a stable version of this API we will notify app developers on Discord.**

    * all times are in the UTC timezone

    ## Authentication

    Most APIs are read-only and do not require authentication. Any API used for Reward Code management uses User OAuth token, except for the initial authentication endpoints which are secured by OAuth Client key and secret.

    User OAuth tokens are sent via Authorization Bearer header:


    ```http
       Authorization: Bearer [USER_OAUTH_TOKEN]
    ```
  contact:
    name: AUTH Token API Support
    url: https://discord.com/invite/P842Hxfz
servers:
  - url: "https://{tenant}/api/v1"
    variables:
      tenant:
        default: www
        description: Your tenant id
paths:
  /codes/redeem:
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Redeem"

            example:
              redemption_code: 8af4ed0f-ee0d-477f-8c5a-d5247528b74e
              wallet: XXXX
              email: me@futurelambo.com

      responses:
        "201":
          description: Created
          headers: {}
          content:
            application/json:
              example:
                redeemed:
                  - redemption_code: 8af4ed0f-ee0d-477f-8c5a-d5247528b74e
                    verification_code: 1f69ec4d-72f8-4d41-bb67-aa67ac476b45
                    wallet: XXXXXX
                  - {}
        "405":
          description: Failed
      summary: Redeem Code
      operationId: redeem_code
      description: >-
        Permanently redeem a Reward Code by associating it with a Solana wallet.

        **NOTE: This may not be exposed to users, and instead the only redemption
        path is via theauthtoken.com/redeem portal to allow for tighter Vendor
        integration, including redirecting to a vendor specified URL.**

        **WARNING: This is irreversable. The response includes a list of
        redeemed codes (typically just one) so that multiple code redemption can
        be added in the future. The actual Reward Code is SAFE to return in this
        case since it has been redeemed already.**
      tags:
        - Rewards
      parameters: []

  /codes/{code}:
    get:
      responses:
        "200":
          description: OK
          headers: {}
          content:
            application/json:
              example:
                codes:
                  - verification: 1f69ec4d-72f8-4d41-bb67-aa67ac476b45
                    vendor_slug: ultimatekicks
                    units: 10
                    duration: 52
                    status: redeemed
                    redemption:
                      redeemed_utc: "2022-02-29T04:20:00Z"
                      wallet: XXXXXX
        "400":
          description: Failed
      summary: Redemption Status
      operationId: code_status
      description: >-
        Check if a Reward Code has been redeemed using either with verification code
        or reward code (less secure). **Prefer using Verification Codes wherever possible to
        avoid potentially leaking a Reward Code in logs/etc that could be then redeemed by an
        unscrupulous middleman.** The actual Reward Code is SAFE to return in this
        case since it has been redeemed already. This is a public API, so no private details
        to the vendor associated with the code are exposed.
      tags:
        - Rewards
      parameters:
        - name: code
          in: path
          description: >-
            check if a Reward has been redeemed using the Verification Code (or the Redemption Code)
          required: true
          schema:
            type: string

  /codes/{code}/detail:
    get:
      responses:
        "200":
          description: OK
        "400":
          description: Failed
      summary: Reward Code Details
      operationId: code_details
      description: >-
        Extended detail on a Reward Code. This is only available when
        authenticated as the Vendor who minted the code originally.
      tags:
        - Reward Management
      parameters:
        - name: code
          in: path
          description: >-
            check using the Verification Code (or the actual Reward Code) if a
            Reward has been redeemed
          required: true
          schema:
            type: string

  /codes/{code}/extended:
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RewardUpdate"

      responses:
        "200":
          description: OK
        "400":
          description: Failed
          content:
            application/json:
              example:
                status: 400
                message: "Invalid Code"
      summary: Update Reward Code Details
      operationId: update_code_details
      description: Update extended details related to a Reward Code
      tags:
        - Reward Management
      parameters:
        - name: code
          in: path
          description: >-
            the Verification Code (or the actual Redemption Code) of the Reward to update
          required: true
          schema:
            type: string
   
  /batch:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Mint"

      responses:
        "400":
          description: Failed
        "201":
          description: Created
          headers: {}
          content:
            application/json:
              example:
                label: 2022_ST_PATRICK_PROMO
                vendor_slug: ultimatekicks
                units: 10
                duration: 52
                total_codes: 1000
                codes:
                  - code: 8af4ed0f-ee0d-477f-8c5a-d5247528b74e
                    verification: 1f69ec4d-72f8-4d41-bb67-aa67ac476b45
                  - {}
      summary: Mint Reward Codes
      operationId: mint_reward_codes
      description: >-
        Mint a new batch of Reward Codes for a Vendor (API request must be authenticated as
        the vendor and the Reward Codes will be assigned to that Vendor).

        NOTE: The cost to the Vendor to mint each Reward Code varies both on the
        Reward Units assigned to each code (per drop) as well as the duration of
        the rewards.
      tags:
        - Batch Management
      parameters: []

  /batch/{batch_id}:
    get:
      responses:
        "200":
          description: OK
          headers: {}
          content:
            application/json:
              example:
                label: 2022_ST_PATRICK_PROMO
                vendor_slug: ultimatekicks
                units: 10
                duration: 52

                stats:
                  total: 1000
                  redeemed: 312
                  pending: 688

                verification_codes:
                  redeemed:
                    - xxxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
                  pending:
                    - xxxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
        "400":
          description: Failed
      summary: Reward Batch Stats
      operationId: reward_code_batch_stats
      description: >-
        Vendor view into the stats for a batch of Reward Codes (number redeemed,
        total, units, duration).
      tags:
        - Batch Management
      parameters:
        - name: batch_id
          in: path
          description: >-
            the batch_id (aka purchase_order_id) for the batch of Reward Codes
          required: true
          schema:
            type: string

    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchUpdate"

      responses:
        "400":
          description: Failed
        "201":
          description: Updated
          headers: {}
          content:
            application/json:
              example: {}
      summary: Reward Batch Update
      operationId: update_reward_code_batch
      description: >-
        Ability to Manage a batch of Reward Codes by the Vendor. Includes
        assigning various attributes to the batch (after minted). Only the
        original purchasing Vendor of the batch can make modifications.
      tags:
        - Batch Management
      parameters: []

  /vendors:
    get:
      responses:
        "400":
          description: Failed
        "200":
          description: OK
          headers: {}
          content:
            application/json:
              example:
                data:
                  - {}
                cursor: E5Mmsd23aP23xYU0
      summary: List Vendors
      operationId: Vendors
      description: >-
        List known vendors that support AUTH as registered on the blockchain and
        statistics on their total Reward Codes (issued, redeemed, etc).

        If a cursor field is present in the response, more results are available.
      tags:
        - Vendors
      parameters:
          - name: cursor
            in: query
            description: Returned from an initial query, allowing client to fetch more results
            required: false
            schema:
              type: string
  
    post:
      responses:
        200:
          description: OK
        400:
          description: Failed
      summary: Register Vendor
      operationId: register_vendor
      description: >-
        Register a new Vendor, including the intial Vendor onboarding fee or the annual AUTH burn fee. 
        NOTE: This API is not necessary for now as all Vendors go through an approval process and are manually added to the internal database.
        Requires the onboarding key in order to call this API (limited to AUTH Management Committee members)
      tags:
        - Vendor Management
      parameters: []

  /vendors/{vendor_slug}:
    get:
      responses:
        "400":
          description: Failed
        "200":
          description: OK
          headers: {}
          content:
            application/json:
              example:
                vendor_id: 909a550a-3573-4c89-93c7-1b258abc966c
                vendor_slug: ultimatekicks
                brand_name: Ultimate Kicks Shoes
                url: https://ultimatekicksforyou.com
                twitter: ultimatekicksforyou
                reward_catalog_url: https://ultimatekicksforyou.com/rewards
                created_utc: "2021-12-25T15:12:55Z"
                status: active
      summary: Vendor Details
      operationId: vendors
      description: "Details about a Vendor"
      tags:
        - Vendors
      parameters:
        - name: vendor_slug
          in: path
          description: >-
            the slug identifier for the Vendor
          required: true
          schema:
            type: string

  /oracle/prices/current:
    get:
      responses:
        "400":
          description: Failed
        "200":
          description: OK
          content:
            application/json:
              example:
                price: 0.0001
                currency: "USD"
                block_effective: 1
                time_effective: 2022-04-01T00:00:00.00Z
      summary: Current AUTH Price
      operationId: oracle_price
      description: >-
        Current Oracle Price for AUTH and the block the price took effect.
      tags:
        - Price
      parameters: []
              
  /oracle/prices:
    get:
      responses:
        "400":
          description: Failed
        "200":
          description: OK
          content:
            application/json:
              example:
                data:
                  - price: 0.0001
                    currency: "USD"
                    block_effective: 1
                    time_effective: 2022-04-01T00:00:00.00Z
      summary: Historical AUTH Prices
      operationId: historical_oracle_prices
      description: >-
        The current and historical Oracle Prices for AUTH including the block
        that they took effect. Pagination by cursor.
      tags:
        - Price
      parameters:
        - name: cursor
          in: query
          description: Returned from an initial query, allowing client to fetch more results
          required: false
          schema:
            type: string

  /stats:
    get:
      responses:
        "400":
          description: Failed
        "200":
          description: OK
          headers: {}
          content:
            application/json:
              example:
                block: 531088
                token_supply: 124112460.312515
      summary: Blockchain Stats 
      operationId: stats
      description: "Summary statistics for current AUTH environment including Blockchain and private data repositories."
      tags:
        - Stats
      parameters: []
  
tags:
  - name: Rewards
    description: Public facing blockchain APIs for interacting with Reward Codes
  - name: Rewards Management
    description: Vendor management of Reward Codes
  - name: Batch Management
    description: Vendor management of Batches of Reward Codes
  - name: Vendors
    description: Vendor Management
  - name: Vendor Management
    description: Management of Vendors
  - name: Oracle
    description: Oracle prices for the AUTH Token
  - name: Stats
    description: Blockchain Stats
  - name: code_model
    x-displayName: Reward Code Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Code" />

components:
  schemas:
    Code:
      type: object
      properties:
        verification:
          description: Verification Code (UUIDv4)
          type: string
          minLength: 1
        status:
          type: string
          description: Code Status
          enum:
            - minted
            - redeemed
            - expired

    Mint:
      type: object
      properties:
        label:
          description: >-
            vendor supplied label for this
            batch of Reward Codes (private and only visible to the vendor)
          type: string
          minLength: 1
          maxLength: 100
        total:
          description: number of Reward Codes that should be minted
          type: integer
          minimum: 1
        units:
          description: number of Reward Units for each Reward Code
          type: integer
          minimum: 1
          maximum: 10000
        duration:
          description: number of weeks the Reward Codes will be active for once redeemed
          type: integer
          minimum: 1
          maximum: 260
      required:
        - label
        - total
        - units
        - duration

    BatchUpdate:
      type: object
      properties:
        label:
          description: >-
            the Vendor assigned label for this batch of Reward Codes
          type: string
          minLength: 1
          maxLength: 150
        redirect_url:
          description: >-
            URL to redirect users to after redeeming Reward Code
            (query params will include verification code and
            additional redemption data)
          type: string
          minLength: 1
          maxLength: 255

    RewardUpdate:
      type: object
      properties:
        vendor_serial_number:
          description: >-
            the Vendor defined product serial number associated with this Reward Code
          type: string
          minLength: 1
          maxLength: 150
        vendor_order_number:
          description: >-
            the Vendor defined order number associated with this Reward Code
          type: string
          minLength: 1
          maxLength: 50
        affiliate_wallet:
          description: >-
            affiliate wallet
          type: string
          minLength: 1
          maxLength: 100
        affiliate_percentage:
          description: >-
            affiliate percentage
          type: string
          minimum: 1
          maximum: 100

    Redeem:
      type: object
      properties:
        code:
          description: >-
            Reward Code to redeem
          type: string
          pattern: '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'
          example: 8af4ed0f-ee0d-477f-8c5a-d5247528b74e
        wallet:
          description: >-
            Solana wallet address this code will be
            redeemed to
          type: string
        email:
          description: >-
            optional email for individual redeeming code
          type: string
          example: me@lambo.com
        vendorSerial:
          description: >-
            optional vendor defined product serial number to associate with this Reward Code
          type: string
      required:
        - code
        - wallet

x-tagGroups:
  - name: Blockchain
    tags:
      - Rewards
      - Vendors
      - Stats
      
  - name: Management
    tags:
      - Reward Management
      - Batch Management
      - Vendor Management

  - name: Oracle
    tags:
      - Price
